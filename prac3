using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using Microsoft.DirectX;
using Microsoft.DirectX.Direct3D;
namespace WindowsFormsApp2
{
    public partial class Form1 : Form
    {
        Microsoft.DirectX.Direct3D.Device device;
        CustomVertex.PositionTextured[] v = new CustomVertex.PositionTextured[3];
            Texture texture;
        public Form1()
        {
            InitializeComponent();
           
        }
       
        private void Form1_Load(object sender, EventArgs e)
        {
            PresentParameters pp = new PresentParameters();
            pp.Windowed = true;
            pp.SwapEffect = SwapEffect.Discard;
            device = new Device(0, DeviceType.Hardware,
                this, CreateFlags.HardwareVertexProcessing, pp);

            device.Transform.Projection =
                Matrix.PerspectiveFovLH(3.14f / 4,
                device.Viewport.Width / device.Viewport.Height,
                1f, 1000f);

            device.Transform.View =
                Matrix.LookAtLH(new Vector3(0, 0, 20),
                new Vector3(), new Vector3(0, 1, 0));

            device.RenderState.Lighting = false;

            v[0] = new CustomVertex.PositionTextured
                (new Vector3(0, 0, 0), 0, 0);
            v[1] = new CustomVertex.PositionTextured
                (new Vector3(5, 0, 0), 0, 1);
            v[2] = new CustomVertex.PositionTextured
                (new Vector3(0, 5, 0), -1, 1);
            texture = new Texture(device,
                new Bitmap("C:\\Users\\Siddhi\\Pictures\\Saved Pictures\\fire.jpg"),0, Pool.Managed);
        }
   
        private void Form1_Paint(object sender, PaintEventArgs e)
        {
        device.Clear(ClearFlags.Target, Color.Blue, 1, 0);
        device.BeginScene();
        device.SetTexture(0, texture);
        device.VertexFormat = CustomVertex.PositionTextured.Format;
        device.DrawUserPrimitives
            (PrimitiveType.TriangleList, v.Length / 3, v);
        device.EndScene();
        device.Present();

    }
    }
}
